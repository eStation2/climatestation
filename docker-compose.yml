version: '3.5'

services:

  web:
    env_file: ./.env
    build:
      context: ./build-docker/web/
      dockerfile: Dockerfile
      args:
        USER_ID: ${USER_ID}
        GROUP_ID: ${GROUP_ID}
    container_name: web
    image: "climatestation/web:1.0"
    ports:
    - 8080:8080
    restart: unless-stopped
    #privileged: true
    volumes: 
    #- /var/run/docker.sock:/var/run/docker.sock:rw
    - ./log/web:/var/log/apache2
    - ./src:/var/www/climatestation:rw
    - ${DATA_VOLUME}:/data:rw
    - ${DATA_VOLUME}/static_data:/data/static_data:rw
    - ${TMP_VOLUME}:/tmp/climatestation:rw

  mapserver:
    build:
      context: ./build-docker/mapserver/
      dockerfile: Dockerfile
    container_name: mapserver
    image: "climatestation/mapserver:1.0"
    restart: unless-stopped
    volumes:
    - ./log/mapserver:/var/log/apache2

  postgres:
    env_file: ./.env
    build:
      context: ./
      dockerfile: ./build-docker/postgres/Dockerfile
      args:
        USER_ID: ${USER_ID}
        GROUP_ID: ${GROUP_ID}
    container_name: postgres
    environment:
      PGPASSWORD: "mesadmin"
      POSTGRES_USER: "estation"
      POSTGRES_PASS: "mesadmin"
      POSTGRES_DBNAME: "estationdb"
      # SINGLE_DB: "estationdb"
      POSTGRES_PORT: "5432"
      DEFAULT_ENCODING: "UTF8"
      DEFAULT_COLLATION: "en_US.UTF-8"
      DEFAULT_CTYPE: "en_US.UTF-8"
      # POSTGRES_MULTIPLE_EXTENSIONS: "postgis,adminpack,postgis_topology"
      POSTGRES_MULTIPLE_EXTENSIONS: "postgis,adminpack"
      POSTGRES_TEMPLATE_EXTENSIONS: "true"
      POSTGRES_HOST_AUTH_METHOD: "trust"
      WAL_SIZE: "4GB"
      MIN_WAL_SIZE: "2048MB"
      WAL_SEGSIZE: "1024"
      MAINTAINANCE_WORK_MEM: "128MB"
      DB_VERSION: "100"
    image: "climatestation/postgis:12"
    ports:
    - 5432:5432
    restart: unless-stopped
    #privileged: true
    volumes:
    - ${DATA_VOLUME}/static_data/db_dump:/data/static_data/db_dump:rw
    - ./src:/var/www/climatestation:rw
    - ./log/postgres:/var/log/climatestation:rw
    - cs-docker-postgresql12-volume:/var/lib/postgresql:rw
    # - /var/run/docker.sock:/var/run/docker.sock:rw
    # - ./postgresql:/var/lib/postgresql:rw

# create an external docker volume: docker volume create --name cs-docker-postgresql12-volume -d local
volumes:
  cs-docker-postgresql12-volume:
    external: true