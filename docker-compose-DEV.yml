version: '3.8'

services:

  web:
    env_file:
      - ./dev-compose-settings.env
    build:
      context: ./build-docker/web/
      dockerfile: DockerfileDEV
    container_name: web
    #links:
    #  - postgres
    #environment:
    #  - PYTHONPATH=${PYTHONPATH}
    #  - PROJ_LIB=${PROJ_LIB}
    image: "climatestation/web:1.0"
    ports:
    - 8080:80
    # - 8899:8899
    # - 9999:9999
    restart: unless-stopped
    # privileged: true
    volumes: 
    # - /var/run/docker.sock:/var/run/docker.sock:rw
    - ./log/web:/var/log/apache2
    - ./src:/var/www/climatestation:rw
    - ${DATA_VOLUME}:/data:rw
    - ${CS_VOLUME}:/climatestation:rw
    - ${TMP_VOLUME}:/tmp/climatestation:rw

  mapserver:
    build:
      context: ./build-docker/mapserver/
      dockerfile: Dockerfile
    container_name: mapserver
    image: "climatestation/mapserver:1.0"
    restart: unless-stopped
    volumes:
    - ./log/mapserver:/var/log/apache2
    # - /data/mapserver/cgi-bin:/usr/lib/cgi-bin:rw

  postgres:
    env_file:
      - ./dev-compose-settings.env
    build:
      context: ./
      dockerfile: ./build-docker/postgres/Dockerfile
    container_name: postgres
    environment:
      PGPASSWORD: "mesadmin"
      POSTGRES_USER: "estation"
      POSTGRES_PASS: "mesadmin"
      POSTGRES_DBNAME: "estationdb"
      POSTGRES_PORT: "5432"
      DEFAULT_ENCODING: "UTF8"
      DEFAULT_COLLATION: "en_US.UTF-8"
      DEFAULT_CTYPE: "en_US.UTF-8"
      POSTGRES_MULTIPLE_EXTENSIONS: "postgis,adminpack"
      POSTGRES_TEMPLATE_EXTENSIONS: "true"
      WAL_SIZE: "4GB"
      MIN_WAL_SIZE: "2048MB"
      WAL_SEGSIZE: "1024"
      MAINTAINANCE_WORK_MEM: "128MB"
      COMPOSE_HTTP_TIMEOUT: "200"
      DB_VERSION: "101"
    image: "climatestation/postgis:12"
    ports:
    - 5432:5432
    restart: unless-stopped
    # privileged: true
    volumes:
    - ${CS_VOLUME}/db_dump:/climatestation/db_dump:rw
    - ./src:/var/www/climatestation:rw
    - ./log/postgres:/var/log/climatestation:rw
    - cs-docker-postgresql12-volume:/var/lib/postgresql:rw
    # - ./postgresql:/var/lib/postgresql:rw
    # - "/var/run/docker.sock:/var/run/docker.sock"-

# create an external docker volume: docker volume create --name cs-docker-postgresql12-volume -d local
volumes:
  cs-docker-postgresql12-volume:
    external: true